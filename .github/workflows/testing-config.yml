name: MergedTesting
env:
  GIT_DEFAULT_USER_NAME : "Github Actions"
  GIT_DEFAULT_USER_EMAIL : "actions_github@gmail.com"

  TARGET_BRANCH_NAME : "master"
  REPOSITORY_AND_OWNER_NAME : ${{ github.repository }}


on: [push]

jobs:
  merged-testing:

    runs-on: [ubuntu-18.04]
    if : ${{ github.ref != 'refs/heads/master' }}

    steps:
      - name: show github.ref
        run: echo ${{github.ref}}
#       - name: Presetting the working environment
#         run: |
#           sudo apt-get -y install maven
#           java -version
#           mvn -version
#           git config --global user.name $GIT_DEFAULT_USER_NAME
#           git config --global user.email $GIT_DEFAULT_USER_EMAIL      

#       # Clone and test master branch, independently
#       - name: Clone master branch
#         run: git clone --branch master https://github.com/$REPOSITORY_AND_OWNER_NAME.git
#       - name: Run tests for master
#         working-directory: ./${{ github.event.repository.name }}
#         run: |
#           git checkout $TARGET_BRANCH_NAME
#           mvn test

#       # Clone and test cur branch, independently
#       - name: Clone current branch to previously clonned master branch
#         working-directory: ./${{ github.event.repository.name }}
#         run: git fetch origin ${GITHUB_REF##*/}:${GITHUB_REF##*/}
#       - name: Run tests for current branch
#         working-directory: ./${{ github.event.repository.name }}
#         run: |
#           git checkout ${GITHUB_REF##*/}
#           mvn test

#       # Locally merge two branches
#       - name: merge master with current branch
#         working-directory: ./${{ github.event.repository.name }}
#         run: git merge ${GITHUB_REF##*/}
#       # Testing the result of merging
#       - name: Run tests for merge result
#         working-directory: ./${{ github.event.repository.name }}
#         run: mvn test

  current-branch-testing:

    runs-on: [ubuntu-18.04]

    steps:
      - name: Presetting the working environment
        run: |
          sudo apt-get -y install maven
          java -version
          mvn -version

      - name: Clone repository
        uses: actions/checkout@v1

      - name: Run tests
        run: mvn test
